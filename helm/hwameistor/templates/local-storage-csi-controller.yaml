apiVersion: apps/v1
kind: Deployment
metadata:
  name: hwameistor-local-storage-csi-controller 
  namespace: {{ .Release.Namespace}}
spec:
  replicas: {{ .Values.localStorageCSIController.replicas}}
  selector:
    matchLabels:
      app: hwameistor-local-storage-csi-controller
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: hwameistor-local-storage-csi-controller
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - hwameistor-local-storage
            topologyKey: topology.lvm.hwameistor.io/node
      containers:
      - args:
        - --v=5
        - --csi-address=$(CSI_ADDRESS)
        - --leader-election=true
        - --feature-gates=Topology=true
        - --strict-topology
        - --extra-create-metadata=true
        env:
        - name: CSI_ADDRESS
          value: /csi/csi.sock
        image: {{ .Values.global.k8sImageRegistry}}/{{ .Values.localStorageCSIController.provisioner.imageRepository}}:{{ .Values.localStorageCSIController.provisioner.tag}}
        imagePullPolicy: IfNotPresent
        name: provisioner
        resources: 
          {{- toYaml .Values.localStorageCSIController.provisioner.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - --v=5
        - --csi-address=$(CSI_ADDRESS)
        - --leader-election=true
        - --timeout=120s
        env:
        - name: CSI_ADDRESS
          value: /csi/csi.sock
        image: {{ .Values.global.k8sImageRegistry}}/{{ .Values.localStorageCSIController.attacher.imageRepository}}:{{ .Values.localStorageCSIController.attacher.tag}}
        imagePullPolicy: IfNotPresent
        name: attacher
        resources: 
          {{- toYaml .Values.localStorageCSIController.attacher.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
          - "--v=5"
          - "--csi-address=$(CSI_ADDRESS)"
          - "--leader-election"
          - "--http-endpoint=:8080"
        env:
          - name: CSI_ADDRESS
            value: /csi/csi.sock
        image: {{ .Values.global.k8sImageRegistry}}/{{ .Values.localStorageCSIController.healthMonitor.imageRepository}}:{{ .Values.localStorageCSIController.healthMonitor.tag}}
        imagePullPolicy: IfNotPresent
        name: monitor
        volumeMounts:
          - name: socket-dir
            mountPath: /csi
        ports:
          - containerPort: 8080
            name: http-endpoint
            protocol: TCP
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /healthz/leader-election
            port: http-endpoint
          initialDelaySeconds: 10
          timeoutSeconds: 10
          periodSeconds: 20
      - args:
        - --v=5
        - --csi-address=$(CSI_ADDRESS)
        - --leader-election=true
        env:
        - name: CSI_ADDRESS
          value: /csi/csi.sock
        image: {{ .Values.global.k8sImageRegistry}}/{{ .Values.localStorageCSIController.resizer.imageRepository}}:{{ .Values.localStorageCSIController.resizer.tag}}
        imagePullPolicy: IfNotPresent
        name: resizer
        resources: 
          {{- toYaml .Values.localStorageCSIController.resizer.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - args:
        - --v=5
        - --leader-election=true
        name: snapshot-controller
        image: {{ .Values.global.k8sImageRegistry}}/{{ .Values.localStorageCSIController.snapshotController.imageRepository}}:{{ .Values.localStorageCSIController.snapshotController.tag}}
        imagePullPolicy: IfNotPresent
        resources:
          {{- toYaml .Values.localStorageCSIController.snapshotController.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
          - --v=5
          - --leader-election=true
          - --csi-address=$(CSI_ADDRESS)
          - --leader-election
        env:
          - name: CSI_ADDRESS
            value: /csi/csi.sock
        volumeMounts:
          - mountPath: /csi
            name: socket-dir
        name: csi-snapshotter
        image: {{ .Values.global.k8sImageRegistry}}/{{ .Values.localStorageCSIController.snapshotter.imageRepository}}:{{ .Values.localStorageCSIController.snapshotter.tag}}
        imagePullPolicy: IfNotPresent
        resources:
          {{- toYaml .Values.localStorageCSIController.snapshotter.resources | nindent 12 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      priorityClassName: {{ .Values.localStorageCSIController.priorityClassName }}
      restartPolicy: Always
      serviceAccountName: hwameistor-admin 
      serviceAccount: hwameistor-admin
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoSchedule
        key: node.kubernetes.io/not-ready
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Exists
      - effect: NoSchedule
        key: node.cloudprovider.kubernetes.io/uninitialized
        operator: Exists
      volumes:
      - hostPath:
          path: {{ template "hwameistor.kubeletRootDir" . }}/plugins/lvm.hwameistor.io
          type: DirectoryOrCreate
        name: socket-dir
